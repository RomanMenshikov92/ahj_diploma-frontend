!function(){"use strict";class t{constructor(t,e){this.lat=t,this.long=e}static getCoordinates(){return new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition(t,e)}))}static async getPosition(){let e;try{e=await t.getCoordinates()}catch{throw console.log("position wrong"),new Error}const{latitude:i,longitude:n}=e.coords;return console.log(`lat ${i}`),console.log(`long ${n}`),new t(i,n)}static coordsPattern=/([-+]?\d+\.\d+),\s*([-+]?\d+\.\d+)/;static checkCoords(e){let i,n;const o=e.match(t.coordsPattern);if(o)return i=o[1],n=o[2],new t(i,n);throw new Error("Wrong format coordinates. It must be: number, number")}}class e{constructor(t,e){this.id=Math.floor(performance.now()),this.content=t,this.date=Date.now(),this.type=e}}class i{constructor(t){this.postService=t}async add(t){const e=new Promise(((e,i)=>{this.postService.create(t,(t=>{console.log("inserted"),e(t)}))}));return await e}async filter(t,e){const i={filterName:t,filterValue:e},n=new Promise(((t,e)=>{this.postService.filter(i,(e=>{console.log("filtered"),t(e)}))}));return await n}}var n=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{url:url,sendMethod:sendMethod,method:method,id:id,data:data,callback:callback},e=`${t.url}/${t.method}`;t.id&&(e+=`&id=${t.id}`),"GET"===t.sendMethod?fetch(e).then((t=>t.json())).then((e=>{console.log(e),t.callback(e)})).catch((t=>{console.error(`Error: ${t}`)})):"POST"===t.sendMethod?fetch(e,{method:"POST",body:JSON.stringify(t.data),headers:{"Content-Type":"application/json"}}).then((t=>t.json())).then((e=>{console.log(e),t.callback(e)})).catch((t=>{console.error(`Error: ${t}`)})):"PUT"===t.sendMethod&&fetch(e,{method:"PUT",body:t.data}).then((t=>t.json())).then((e=>{console.log(e),t.callback(e)})).catch((t=>{console.error(`Error: ${t}`)}))};class o{constructor(t){this.url=t}async list(t,e){n({url:`${this.url}?page=${t}&limit=10`,sendMethod:"GET",method:"allPosts",callback:e})}async get(t,e){n({url:this.url,sendMethod:"GET",method:"postById",id:t,callback:e})}async create(t,e){n({url:this.url,sendMethod:"POST",method:"createPost",data:t,callback:e})}async filter(t,e){n({url:this.url,sendMethod:"POST",method:"filterPosts",data:t,callback:e})}async upload(t,e){n({url:this.url,sendMethod:"PUT",method:"upload",data:t,callback:e})}}class s{constructor(t,e,i,n){this.postService=e,this.createPostShowAll=i,this.form=t,this.url=n,this.onAddFile=this.onAddFile.bind(this),this.onDropFile=this.onDropFile.bind(this)}bindToDOM(){this.fileInput=document.querySelector(".file-input"),this.fileContainer=document.querySelector(".file-container"),this.uploadForm=document.querySelector(".upload-form"),this.fileContainer.addEventListener("click",(t=>{this.fileInput.dispatchEvent(new MouseEvent("click"))})),this.fileInput.addEventListener("change",this.onAddFile),this.form.addEventListener("dragover",(t=>{t.preventDefault()})),this.form.addEventListener("drop",this.onDropFile)}onAddFile(t){console.dir(this.fileInput);const e=this.fileInput.files&&this.fileInput.files[0];let i;const n=new FormData(this.uploadForm);this.postService.upload(n,(t=>{console.log("uploaded"),i=`${this.url}${t}`,e.type.includes("image")?this.createPostShowAll(i,"img"):e.type.includes("video")?this.createPostShowAll(i,"vid"):e.type.includes("audio")&&this.createPostShowAll(i,"aud")}))}onDropFile(t){t.preventDefault();const e=t.dataTransfer.files&&t.dataTransfer.files[0];let i;this.fileInput.files=t.dataTransfer.files;const n=new FormData(this.uploadForm);this.postService.upload(n,(t=>{console.log("uploaded"),i=`${this.url}${t}`,e.type.includes("image")?this.createPostShowAll(i,"img"):e.type.includes("video")?this.createPostShowAll(i,"vid"):e.type.includes("audio")&&this.createPostShowAll(i,"aud")}))}}class a{constructor(t){const e=document.createElement("form");e.className="warning",e.name="warning",e.innerHTML=this.warningFormMarkup(),t.insertBefore(e,null),this.onWarningCancel=this.onWarningCancel.bind(this),this.onWarningSubmit=this.onWarningSubmit.bind(this)}warningFormMarkup(){return'\n        <form class="warning" name="warning">\n            <label for="warning-position">\n                We\'re sorry.\n                But something went wrong, we couldn\'t get your position.\n                Please allow access to your position or input your position\n                into field below in format: latitude, longitude.\n            </label>\n            <input type="text" class="warning-position" name="warning-position" id="warning-position">\n            <input type="submit" value="OK" class="warning__submit">\n            <input type="button" value="Cancel" class="warning__cancel">\n        </form>\n    '}bindToDOM(){this.warningForm=document.querySelector(".warning"),this.inputPosElem=this.warningForm.querySelector(".warning-position"),this.cancelBtn=this.warningForm.querySelector(".warning__cancel"),this.cancelBtn.addEventListener("click",this.onWarningCancel)}async showWarning(){this.warningForm.classList.toggle("warning_active");const t=new Promise(((t,e)=>{this.warningForm.addEventListener("submit",(e=>{const i=this.onWarningSubmit(e);t(i)}))}));return await t}onWarningSubmit(e){let i;e.preventDefault();const n=this.inputPosElem.value;try{i=t.checkCoords(n)}catch(t){throw console.log(t),alert(t),new Error(t)}return this.warningForm.remove(),i}onWarningCancel(t){this.inputPosElem.value="",this.warningForm.classList.toggle("warning_active")}}class r{constructor(t,e){this.sec=t,this.min=e}}class d{constructor(t,e,i,n){this.form=t,this.createPostShowAll=e,this.postService=i,this.url=n,this.onAddVideoSubmit=this.onAddVideoSubmit.bind(this),this.updateTimer=this.updateTimer.bind(this),this.onStopVideoAndHide=this.onStopVideoAndHide.bind(this),this.onCanPlay=this.onCanPlay.bind(this)}bindToDOM(){this.videoBtn=this.form.querySelector(".post-video"),this.videoPlayer=document.querySelector(".video"),this.videoControls=document.querySelector(".video-controls"),this.videoTimer=document.querySelector(".video-timer"),this.videoSaveBtn=document.querySelector(".video-save"),this.videoCancelBtn=document.querySelector(".video-cancel"),this.videoBtn.addEventListener("click",this.onAddVideoSubmit),this.videoSaveBtn.addEventListener("click",this.onStopVideoAndHide),this.videoCancelBtn.addEventListener("click",this.onStopVideoAndHide)}updateTimer(){59===this.timer.sec?(this.timer.min++,this.timer.sec=0):this.timer.sec++,this.videoTimer.textContent=`${this.timer.min.toString().padStart(2,"0")}:${this.timer.sec.toString().padStart(2,"0")}`}toggleVideoBlock(){this.videoPlayer.classList.toggle("video_active"),this.videoControls.classList.toggle("video-controls_active")}onStopVideoAndHide(t){"video-cancel"===t.target.className&&(this.cancelled=!0),this.recorder.stop(),this.stream.getTracks().forEach((t=>t.stop())),this.toggleVideoBlock(),this.videoBtn.classList.toggle("hidden")}onCanPlay(){this.timer=new r(0,0),this.videoIntervalId=setInterval(this.updateTimer,1e3),this.videoPlayer.play()}async onAddVideoSubmit(t){this.videoBtn.classList.toggle("hidden");const e=await navigator.mediaDevices.getUserMedia({video:!0,audio:!0});this.stream=e,this.videoPlayer.srcObject=e,this.videoPlayer.muted=!0,this.toggleVideoBlock(),this.videoPlayer.addEventListener("canplay",this.onCanPlay);const i=new MediaRecorder(e);this.recorder=i;const n=[];i.addEventListener("start",(()=>{console.log("start"),this.cancelled=!1})),i.addEventListener("dataavailable",(t=>{n.push(t.data)})),i.addEventListener("stop",(async()=>{if(this.videoIntervalId&&(clearInterval(this.videoIntervalId),this.videoPlayer.removeEventListener("canplay",this.onCanPlay)),!this.cancelled){const t=new Blob(n);let e;URL.createObjectURL(t),this.uploadVideoForm=document.querySelector(".video-form"),this.videoFileInput=document.querySelector(".video-file-input");const i=new File([t],"tmpFile",{type:t.type}),o=new DataTransfer;o.items.add(i),this.videoFileInput.files=o.files;const s=new FormData(this.uploadVideoForm);this.postService.upload(s,(t=>{console.log("uploaded"),e=`${this.url}${t}`,this.createPostShowAll(e,"vid")}))}})),i.start()}}class l{constructor(t,e,i,n){this.form=t,this.createPostShowAll=e,this.postService=i,this.url=n,this.onAddAudioSubmit=this.onAddAudioSubmit.bind(this),this.onStopAudioAndHide=this.onStopAudioAndHide.bind(this)}bindToDOM(){this.audioBtn=this.form.querySelector(".post-audio"),this.audioPlayer=document.querySelector(".audio"),this.audioControls=document.querySelector(".audio-controls"),this.audioSaveBtn=document.querySelector(".audio-save"),this.audioCancelBtn=document.querySelector(".audio-cancel"),this.audioBtn.addEventListener("click",this.onAddAudioSubmit),this.audioSaveBtn.addEventListener("click",this.onStopAudioAndHide),this.audioCancelBtn.addEventListener("click",this.onStopAudioAndHide)}toggleAudioBlock(){this.audioPlayer.classList.toggle("audio_active"),this.audioControls.classList.toggle("audio-controls_active")}onStopAudioAndHide(t){"audio-cancel"===t.target.className&&(this.cancelled=!0),this.recorder.stop(),this.stream.getTracks().forEach((t=>t.stop())),this.toggleAudioBlock(),this.audioBtn.classList.toggle("hidden")}async onAddAudioSubmit(t){this.audioBtn.classList.toggle("hidden");const e=await navigator.mediaDevices.getUserMedia({audio:!0,video:!1});this.stream=e,this.audioPlayer.srcObject=e,this.toggleAudioBlock(),this.audioPlayer.addEventListener("canplay",this.onCanPlay);const i=new MediaRecorder(e);this.recorder=i;const n=[];i.addEventListener("start",(()=>{console.log("start"),this.cancelled=!1})),i.addEventListener("dataavailable",(t=>{n.push(t.data)})),i.addEventListener("stop",(async()=>{if(this.audioIntervalId&&clearInterval(this.audioIntervalId),!this.cancelled){const t=new Blob(n);let e;URL.createObjectURL(t),this.uploadAudioForm=document.querySelector(".audio-form"),this.audioFileInput=document.querySelector(".audio-file-input");const i=new File([t],"tmpFile",{type:t.type}),o=new DataTransfer;o.items.add(i),this.audioFileInput.files=o.files;const s=new FormData(this.uploadAudioForm);this.postService.upload(s,(t=>{console.log("uploaded"),e=`${this.url}${t}`,this.createPostShowAll(e,"aud")}))}})),i.start()}}const c=new class{constructor(t){this.urlServer="https://ahj-diploma-backend-7rkr.onrender.com",this.containerName=t,this.postService=new o(this.urlServer),this.postList=new i(this.postService),this.onAddSubmit=this.onAddSubmit.bind(this),this.onAddLocation=this.onAddLocation.bind(this),this.onSearchSubmit=this.onSearchSubmit.bind(this),this.onFilter=this.onFilter.bind(this),this.onClearFilter=this.onClearFilter.bind(this)}addFormMarkup(){return'\n        <form class="create-post" name="create-post">\n            <input type="text" class="post-text" name="post-text" placeholder="Write something...">\n        </form>\n        <div class="buttons">\n          <form class="upload-form">\n            <div class="file-container">\n              <input class="overlapped file-input" name="file" type="file" accept="image, video, audio">\n              <span class="file-btn">\n              <svg version="1.1" id="Icons" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"\n                  viewBox="0 0 32 32" xml:space="preserve">\n              <style type="text/css">\n                .st0{fill:none;stroke:#000000;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;}\n                .st1{fill:none;stroke:#000000;stroke-width:2;stroke-linejoin:round;stroke-miterlimit:10;}\n              </style>\n              <polyline class="st0" points="19,3 19,9 25,9 19,3 7,3 7,29 22,29 "/>\n              <circle class="st0" cx="22" cy="22" r="7"/>\n              <line class="st0" x1="22" y1="19" x2="22" y2="25"/>\n              <line class="st0" x1="19" y1="22" x2="25" y2="22"/>\n              <line class="st0" x1="25" y1="9" x2="25" y2="15.7"/>\n              </svg>\n              </span>\n            </div>\n          </form>\n          <span class="post-video">\n          <svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M5 6C3.89543 6 3 6.89543 3 8L3 16C3 17.1046 3.89543 18 5 18H13C14.1046 18 15 17.1046 15 16V8C15 6.89543 14.1046 6 13 6H5Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            <path d="M16.4142 10.5858C15.6332 11.3668 15.6332 12.6332 16.4142 13.4142L19.2929 16.2929C19.9229 16.9229 21 16.4767 21 15.5858V8.41421C21 7.52331 19.9229 7.07714 19.2929 7.70711L16.4142 10.5858Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>\n        </span>\n        <span class="post-audio">\n        <svg fill="#000000" width="800px" height="800px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">\n        <g data-name="Layer 2" id="Layer_2">\n        <path d="M16,30a1,1,0,0,1-1-1V25a1,1,0,0,1,2,0v4A1,1,0,0,1,16,30Z"/>\n        <path d="M24,26H8a2,2,0,0,1-2-2V23a1,1,0,0,1,2,0v1H24V22a1,1,0,0,1,2,0v2A2,2,0,0,1,24,26Z"/>\n        <path d="M18,23H14a5,5,0,0,1-5-5V8a5,5,0,0,1,5-5h4a5,5,0,0,1,5,5V18A5,5,0,0,1,18,23ZM14,5a3,3,0,0,0-3,3V18a3,3,0,0,0,3,3h4a3,3,0,0,0,3-3V8a3,3,0,0,0-3-3Z"/>\n        <path d="M14,9a1,1,0,0,1-1-1V5a1,1,0,0,1,2,0V8A1,1,0,0,1,14,9Z"/>\n        <path d="M18,9a1,1,0,0,1-1-1V5a1,1,0,0,1,2,0V8A1,1,0,0,1,18,9Z"/>\n        </g>\n        </svg>\n      </span>\n        <span class="location-btn">\n        <svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M12 21C15.5 17.4 19 14.1764 19 10.2C19 6.22355 15.866 3 12 3C8.13401 3 5 6.22355 5 10.2C5 14.1764 8.5 17.4 12 21Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n        </svg>\n      </span>\n        </div>\n        '}bindToDOM(){this.container=document.querySelector(this.containerName)}bindToDOMAdd(){this.form=document.querySelector(".create-post"),this.inputElem=this.form.querySelector(".post-text"),this.locationBtn=document.querySelector(".location-btn"),this.searchInput=document.querySelector(".search-input"),this.searchForm=document.querySelector(".search-form"),this.searchBtn=document.querySelector(".search-icon"),this.filterElem=document.querySelector(".filter-attach"),this.filterClear=document.querySelector(".filter_all"),this.form.addEventListener("submit",this.onAddSubmit),this.locationBtn.addEventListener("click",this.onAddLocation),this.searchForm.addEventListener("submit",this.onSearchSubmit),this.searchBtn.addEventListener("click",this.onSearchSubmit),this.filterElem.addEventListener("click",this.onFilter),this.filterClear.addEventListener("click",this.onClearFilter)}renderPost(t){const e=new Date(t.date);return"video"===t.type?`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content-video">\n              <video class="${t.content.className}" src="${t.content.src}" controls>\n              </video>\n            </div>\n        </div>\n    `:"audio"===t.type?`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content-audio">\n              <audio class="${t.content.className}" src="${t.content.src}" controls>\n              </audio>\n            </div>\n        </div>\n    `:"url"===t.type?`\n          <div class="post" data-id="${t.id}">\n              <div class="post__date">\n                ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n              </div>\n              <div class="post__content-url">\n                <a href="${t.content}" target="_blank">${t.content}</a>\n              </div>\n          </div>\n      `:"loc"===t.type?`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content-loc">\n              [${t.content.lat}, ${t.content.long}]\n            </div>\n        </div>\n    `:"img"===t.type?`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content-img">\n              <a download href="${t.content}" rel="noopener" name="abc" target="_blank">\n                <img class="post__img" src="${t.content}">\n              </a>\n            </div>\n        </div>\n    `:"vid"===t.type?`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content-vid">\n              <video class="video-post" controls src="${t.content}"></video>\n            </div>\n        </div>\n    `:"aud"===t.type?`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content-aud">\n              <audio class="audio-post" controls src="${t.content}"></audio>\n            </div>\n        </div>\n    `:`\n        <div class="post" data-id="${t.id}">\n            <div class="post__date">\n              ${e.getDate().toString().padStart(2,"0")}.${e.getMonth().toString().padStart(2,"0")}.${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}\n            </div>\n            <div class="post__content">\n              ${t.content}\n            </div>\n        </div>\n    `}renderPosts(){const t=document.createElement("div");t.className="post-container",this.container.insertBefore(t,this.form);let e=1;const i=async()=>{await this.postService.list(e,(i=>{i.length>0&&(i.reverse().forEach((e=>{if(console.log("55555"),!this.postContainer.querySelector(`.post[data-id="${e.id}"]`)){const i=this.renderPost(e);t.insertAdjacentHTML("afterbegin",i)}})),e++,this.container.scrollTop=this.container.scrollHeight)}))};i(),this.postContainer=t,this.container.addEventListener("scroll",(()=>{console.log("123"),0===this.container.scrollTop&&i()}))}renderContent(){this.renderPosts();const t=document.createElement("form");t.className="create-post",t.name="create-post",t.innerHTML=this.addFormMarkup(),this.container.insertBefore(t,null),this.bindToDOMAdd(),this.warningShow=new a(this.container),this.warningShow.bindToDOM(),this.fileUploader=new s(this.form,this.postService,this.createPostShowAll.bind(this),this.urlServer),this.fileUploader.bindToDOM(),this.videoRec=new d(this.form,this.createPostShowAll.bind(this),this.postService,this.urlServer),this.videoRec.bindToDOM(),this.audioRec=new l(this.form,this.createPostShowAll.bind(this),this.postService,this.urlServer),this.audioRec.bindToDOM()}clearPosts(){Array.from(this.postContainer.querySelectorAll(".post")).forEach((t=>{t.remove()}))}updatePosts(t){if(this.container.scrollHeight,t)t.forEach((t=>{const e=this.renderPost(t);console.log("111111111"),this.postContainer.insertAdjacentHTML("beforeend",e),this.container.scrollTop=this.container.scrollHeight}));else{let t=1;const e=async()=>{await this.postService.list(t,(i=>{i.length>0&&(i.reverse().forEach((t=>{if(console.log("222222"),!this.postContainer.querySelector(`.post[data-id="${t.id}"]`)){const e=this.renderPost(t);this.postContainer.insertAdjacentHTML("afterbegin",e)}})),t++,this.container.scrollTop=this.container.scrollHeight,0===this.container.scrollTop&&e())}))};e(),this.container.addEventListener("scroll",(()=>{console.log("99999999"),0===this.container.scrollTop&&e()}))}}async createPostShowAll(t,i){const n=new e(t,i),o=await this.postList.add(n);this.inputElem.value="",this.clearPosts(),this.updatePosts(o)}onAddSubmit(t){t.preventDefault();const e=this.inputElem.value.trim();this.isValidURL(e)?this.createPostShowAll(e,"url"):this.createPostShowAll(e,"text")}isValidURL(t){return!!/^(http(s)?:\/\/.)[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/=]*)$/g.test(t)}async onAddLocation(e){let i;e.preventDefault();try{i=await t.getPosition()}catch{i=await this.warningShow.showWarning()}this.createPostShowAll(i,"loc")}async onSearchSubmit(t){t.preventDefault();const e=this.searchInput.value.trim();e?this.postList.filter("content",e).then((t=>{this.clearPosts(),this.updatePosts(t)})):(this.clearPosts(),this.updatePosts())}async onFilter(t){t.target.classList.contains("filter_img")?await this.postList.filter("type","img").then((t=>{this.clearPosts(t),this.updatePosts(t)})):t.target.classList.contains("filter_video")?await this.postList.filter("type","vid").then((t=>{this.clearPosts(t),this.updatePosts(t)})):t.target.classList.contains("filter_audio")&&await this.postList.filter("type","aud").then((t=>{this.clearPosts(t),this.updatePosts(t)}))}onClearFilter(t){this.clearPosts(),this.updatePosts()}}(".container");c.bindToDOM(),c.renderContent()}();